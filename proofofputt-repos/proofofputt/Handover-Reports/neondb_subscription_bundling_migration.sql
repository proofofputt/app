-- Proof of Putt - Subscription Bundling & Gifting Feature Migration for NeonDB
-- Date: 2025-10-05
-- Run this script in your NeonDB SQL console to add subscription bundling tables
-- Copy and paste the entire contents below into the NeonDB query editor

-- ============================================================================
-- SUBSCRIPTION BUNDLES TABLE
-- ============================================================================
-- Stores available subscription bundle packages with discount tiers
CREATE TABLE IF NOT EXISTS subscription_bundles (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    quantity INT NOT NULL,
    discount_percentage NUMERIC(5, 2) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ============================================================================
-- USER GIFT SUBSCRIPTIONS TABLE
-- ============================================================================
-- Tracks gift subscriptions owned by users (purchased bundles or admin grants)
CREATE TABLE IF NOT EXISTS user_gift_subscriptions (
    id SERIAL PRIMARY KEY,
    owner_user_id INT REFERENCES players(player_id) NOT NULL,
    bundle_id INT REFERENCES subscription_bundles(id), -- Can be null for single gifts like the intro offer
    gift_code VARCHAR(255) UNIQUE NOT NULL,
    is_redeemed BOOLEAN DEFAULT FALSE,
    redeemed_by_user_id INT REFERENCES players(player_id),
    redeemed_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ============================================================================
-- PLAYERS TABLE MODIFICATIONS
-- ============================================================================
-- Add subscription status columns to existing players table
ALTER TABLE players ADD COLUMN IF NOT EXISTS is_subscribed BOOLEAN DEFAULT FALSE;
ALTER TABLE players ADD COLUMN IF NOT EXISTS subscription_expires_at TIMESTAMP WITH TIME ZONE;

-- ============================================================================
-- INDEXES FOR PERFORMANCE
-- ============================================================================
CREATE INDEX IF NOT EXISTS idx_user_gift_subscriptions_owner ON user_gift_subscriptions(owner_user_id);
CREATE INDEX IF NOT EXISTS idx_user_gift_subscriptions_code ON user_gift_subscriptions(gift_code);
CREATE INDEX IF NOT EXISTS idx_user_gift_subscriptions_redeemed ON user_gift_subscriptions(is_redeemed);
CREATE INDEX IF NOT EXISTS idx_players_subscription_status ON players(is_subscribed);
CREATE INDEX IF NOT EXISTS idx_players_subscription_expires ON players(subscription_expires_at);

-- ============================================================================
-- INITIAL DATA - SUBSCRIPTION BUNDLES
-- ============================================================================
-- Insert default subscription bundle packages
INSERT INTO subscription_bundles (name, quantity, discount_percentage) VALUES
('3-Pack', 3, 10.00),   -- 10% discount
('5-Pack', 5, 20.00),   -- 20% discount
('10-Pack', 10, 42.00), -- 42% discount
('21-Pack', 21, 50.00)  -- 50% discount
ON CONFLICT DO NOTHING;

-- ============================================================================
-- VERIFICATION QUERIES
-- ============================================================================
-- Verify tables were created successfully
SELECT table_name
FROM information_schema.tables
WHERE table_schema = 'public'
AND table_name IN ('subscription_bundles', 'user_gift_subscriptions');

-- Verify subscription bundles were inserted
SELECT * FROM subscription_bundles ORDER BY quantity;

-- Verify new columns were added to players table
SELECT column_name, data_type
FROM information_schema.columns
WHERE table_schema = 'public'
AND table_name = 'players'
AND column_name IN ('is_subscribed', 'subscription_expires_at');

-- ============================================================================
-- ROLLBACK SCRIPT (if needed)
-- ============================================================================
-- Uncomment the lines below to rollback these changes
--
-- DROP INDEX IF EXISTS idx_user_gift_subscriptions_owner;
-- DROP INDEX IF EXISTS idx_user_gift_subscriptions_code;
-- DROP INDEX IF EXISTS idx_user_gift_subscriptions_redeemed;
-- DROP INDEX IF EXISTS idx_players_subscription_status;
-- DROP INDEX IF EXISTS idx_players_subscription_expires;
--
-- DROP TABLE IF EXISTS user_gift_subscriptions;
-- DROP TABLE IF EXISTS subscription_bundles;
--
-- ALTER TABLE players DROP COLUMN IF EXISTS is_subscribed;
-- ALTER TABLE players DROP COLUMN IF EXISTS subscription_expires_at;

-- ============================================================================
-- NOTES
-- ============================================================================
-- 1. The user_gift_subscriptions.owner_user_id references players(player_id)
-- 2. Gift codes are automatically generated by the API endpoints
-- 3. Bundle discounts can be updated using update_subscription_bundle_discount.sql
-- 4. Zaprite webhook integration requires configuration (see SUBSCRIPTION_BUNDLING_FEATURE_HANDOVER.md)
-- 5. This script is idempotent and safe to run multiple times
